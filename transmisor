//Codigo de Joel Grijalva y Emiliano Castro

#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>

#define BME280_DIRECCION_I2C 0x76
#define RX_PIN 4
#define TX_PIN 5
#define GPS_RX_PIN 6
#define GPS_TX_PIN 7

Adafruit_BME280 bme_RRT;
TinyGPSPlus gps_RRT;
SoftwareSerial gpsSerial_RRT(GPS_RX_PIN, GPS_TX_PIN);
SoftwareSerial rylr998_RRT(RX_PIN, TX_PIN);


struct SensorData {
  float temperatura;
  float humedad;
  float presion;
  double latitud;
  double longitud;
  double altitud;
  int estadoFC51;
  int luminosidad;
};

void iniciarSistema_RRT() {
  Serial.begin(9600);
  gpsSerial_RRT.begin(9600);
  rylr998_RRT.begin(9600);

  if (!bme_RRT.begin(BME280_DIRECCION_I2C)) {
    Serial.println("error al iniciar el bme280");
    while (1);
  }

  rylr998_RRT.println("AT+ADDRESS=1");
  delay(1000);
  rylr998_RRT.println("AT+NETWORKID=18");
  delay(1000);
  rylr998_RRT.println("AT+BAND=868000000");
  delay(1000);
}

void leerYEnviarDatos_RRT() {
  SensorData data;
  data.temperatura = bme_RRT.readTemperature();
  data.humedad = bme_RRT.readHumidity();
  data.presion = bme_RRT.readPressure() / 100.0F;

  while (gpsSerial_RRT.available() > 0) {
    gps_RRT.encode(gpsSerial_RRT.read());
  }

  data.latitud = gps_RRT.location.lat();
  data.longitud = gps_RRT.location.lng();
  data.altitud = gps_RRT.altitude.meters();

  data.estadoFC51 = digitalRead(8);
  data.luminosidad = analogRead(A0);


  rylr998_RRT.print("AT+SEND=1,");
  rylr998_RRT.print(sizeof(data));
  rylr998_RRT.print(",");
  rylr998_RRT.write((uint8_t*)&data, sizeof(data));
  rylr998_RRT.println();


  delay(5000);
}

void setup() {
  iniciarSistema_RRT();
}

void loop() {
  leerYEnviarDatos_RRT();
}

